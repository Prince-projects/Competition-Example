import java.awt.*;
import java.awt.event.InputEvent;
import java.awt.image.BufferedImage;
import java.util.concurrent.ThreadLocalRandom;

public class CompeititonModule extends main {
    int randomSeconds = ThreadLocalRandom.current().nextInt(0, 1500 + 1);
    int randomSeconds2 = ThreadLocalRandom.current().nextInt(0, 1500 + 1);
    boolean picRelease = false;
    int score1 = 0;
    int score2 = 0;
    boolean score1Activated = false;
    boolean score2Activated = false;
    int timesRan = 0;
    void screenShot() throws AWTException, InterruptedException {
        while (!picRelease) { // Decs
            int colorCount = 0; // First players score condition.
            int colorCount2 = 0; // Second players score condition.
            boolean colorFound = false;
            boolean colorFound2 = false;
            Robot droid = new Robot();
            Thread.sleep(1000);
            Rectangle screenArea1 = new Rectangle();
            Rectangle screenArea2 = new Rectangle();
            screenArea1.setBounds(2350, 547, 40,40);
            screenArea2.setBounds(3302, 547, 40, 40);
            BufferedImage screenCap = droid.createScreenCapture(screenArea1);
            BufferedImage screenCap2 = droid.createScreenCapture(screenArea2);
            Color[] colorSet = new Color[1600];
            Color[] colorSet2 = new Color[1600];

            for (int x = 0, totalPixels = 0; x < screenCap.getWidth(); x++) {
                for (int y = 0; y < screenCap.getHeight(); y++) {
                    int c = screenCap.getRGB(x, y);
                    Color color = new Color(c);
                    colorSet[totalPixels] = color;
                    totalPixels++;
                } // Counting and adding each pixel to a color set.
            }

            for (int i = 0; i < 1600; i++) {
                if (colorSet[i].getRed() > 190 && colorSet[i].getGreen() > 190 && colorSet[i].getBlue() < 180 ) {
                    colorCount++;
                }
                if (colorCount > 30) {
                    colorFound = true;
                }
            }

            for (int x = 0, totalPixels = 0; x < screenCap2.getWidth(); x++) {
                for (int y = 0; y < screenCap2.getHeight(); y++) {
                    int c = screenCap2.getRGB(x, y);
                    Color color = new Color(c);
                    colorSet2[totalPixels] = color;
                    totalPixels++;
                } // Counting and adding each pixel to a color set.
            }

            for (int i = 0; i < 1600; i++) {
                if (colorSet2[i].getRed() > 190 && colorSet2[i].getGreen() > 190 && colorSet2[i].getBlue() < 180 ) {
                    colorCount2++;
                }
                if (colorCount2 > 30) {
                    colorFound2 = true;
                }
            }


            if (colorFound) { // Reward score based on colors detected.
                score1 = score1 + 30;

            }

            if (colorFound2) { // Reward score based on colors detected.
                score2 = score2 + 30;
            }

            if (score1 > score2 && !score1Activated) {

                System.out.println("Player 2 Activated!");
                droid.mouseMove(65, 218);
                droid.mousePress(InputEvent.BUTTON1_DOWN_MASK);
                droid.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);
                score1Activated = true;
                score2Activated = false;
            }

            if (score2 > score1 && !score2Activated) {
                System.out.println("Player 1 Activated!");
                if (!score2Activated) {
                    droid.mouseMove(65, 218);
                    droid.mousePress(InputEvent.BUTTON1_DOWN_MASK);
                    droid.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);
                }
                score1Activated = false;
                score2Activated = true;
            }
            if (score2Activated) {
                timesRan++;
                timesRan++;
            }
            System.out.println("Times run " + timesRan);
            System.out.println("Player 1 " + score1);
            System.out.println("Player 2 " + score2);

        }
    }
}
